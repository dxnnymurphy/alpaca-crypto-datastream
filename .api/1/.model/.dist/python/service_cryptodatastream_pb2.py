# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service-cryptodatastream.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1eservice-cryptodatastream.proto\x12\x15\x63ryptodatastream.grpc\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xd6\x01\n\x05Tasks\x12\x37\n\x08metadata\x18\x01 \x01(\x0b\x32%.cryptodatastream.grpc.Tasks.Metadata\x12/\n\x04spec\x18\x02 \x01(\x0b\x32!.cryptodatastream.grpc.Tasks.Spec\x1a\x16\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x1aK\n\x04Spec\x12*\n\x05items\x18\x01 \x03(\x0b\x32\x1b.cryptodatastream.grpc.Task\x12\x17\n\x0fnumber_of_items\x18\x02 \x01(\x05\"\xd0\x04\n\x04Task\x12\x36\n\x08metadata\x18\x01 \x01(\x0b\x32$.cryptodatastream.grpc.Task.Metadata\x12.\n\x04spec\x18\x02 \x01(\x0b\x32 .cryptodatastream.grpc.Task.Spec\x12\x32\n\x06status\x18\x03 \x01(\x0b\x32\".cryptodatastream.grpc.Task.Status\x1a\x83\x01\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x12-\n\x04type\x18\x02 \x01(\x0e\x32\x1f.cryptodatastream.grpc.TaskType\x12\x11\n\tnamespace\x18\x03 \x01(\t\x12\x0e\n\x06vendor\x18\x04 \x01(\t\x12\x19\n\x11\x65xecutor_affinity\x18\x05 \x01(\x05\x1a\xd6\x01\n\x04Spec\x12\x46\n\x11task_trade_search\x18\x01 \x01(\x0b\x32&.cryptodatastream.grpc.TaskTradeSearchH\x00\x88\x01\x01\x12S\n\x18task_replay_trade_search\x18\x02 \x01(\x0b\x32,.cryptodatastream.grpc.TaskReplayTradeSearchH\x01\x88\x01\x01\x42\x14\n\x12_task_trade_searchB\x1b\n\x19_task_replay_trade_search\x1aM\n\x06Status\x12\x33\n\x04type\x18\x01 \x01(\x0e\x32%.cryptodatastream.grpc.TaskStatusType\x12\x0e\n\x06reason\x18\x02 \x01(\t\"i\n\x0fTaskTradeSearch\x12\x0e\n\x06Vendor\x18\x01 \x01(\t\x12\x16\n\tstartTime\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07\x65ndTime\x18\x03 \x01(\tH\x01\x88\x01\x01\x42\x0c\n\n_startTimeB\n\n\x08_endTime\"o\n\x15TaskReplayTradeSearch\x12\x0e\n\x06Vendor\x18\x01 \x01(\t\x12\x16\n\tstartTime\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07\x65ndTime\x18\x03 \x01(\tH\x01\x88\x01\x01\x42\x0c\n\n_startTimeB\n\n\x08_endTime\"\x06\n\x04Void\"\x16\n\x05Int32\x12\r\n\x05value\x18\x01 \x01(\x05\"\x17\n\x06String\x12\r\n\x05value\x18\x01 \x01(\t*U\n\x08TaskType\x12\x14\n\x10TaskType_UNKNOWN\x10\x00\x12\x15\n\x11TASK_TRADE_SEARCH\x10\x01\x12\x1c\n\x18TASK_REPLAY_TRADE_SEARCH\x10\x02*\xe9\x01\n\x0eTaskStatusType\x12\x1a\n\x16TaskStatusType_UNKNOWN\x10\x00\x12\x14\n\x10TASK_STATUS_DONE\x10\x01\x12\x17\n\x13TASK_STATUS_CREATED\x10\x02\x12&\n\"TASK_STATUS_ERROR_INVALID_ARGUMENT\x10\x03\x12$\n TASK_STATUS_ERROR_ALREADY_EXISTS\x10\x04\x12\x1f\n\x1bTASK_STATUS_ERROR_TRANSIENT\x10\x05\x12\x1d\n\x19TASK_STATUS_ERROR_UNKNOWN\x10\x06\x32\xff\x03\n\x17ServiceCryptoDataStream\x12u\n\nCreateTask\x12\x1b.cryptodatastream.grpc.Task\x1a\x1b.cryptodatastream.grpc.Task\"-\x82\xd3\xe4\x93\x02\'\"\"/proxy/cryptodatastream/api/1/task:\x01*\x12|\n\nDeleteTask\x12\x1d.cryptodatastream.grpc.String\x1a\x1b.cryptodatastream.grpc.Task\"2\x82\xd3\xe4\x93\x02,**/proxy/cryptodatastream/api/1/task/{value}\x12z\n\x08ReadTask\x12\x1d.cryptodatastream.grpc.String\x1a\x1b.cryptodatastream.grpc.Task\"2\x82\xd3\xe4\x93\x02,\x12*/proxy/cryptodatastream/api/1/task/{value}\x12s\n\tListTasks\x12\x1b.cryptodatastream.grpc.Void\x1a\x1c.cryptodatastream.grpc.Tasks\"+\x82\xd3\xe4\x93\x02%\x12#/proxy/cryptodatastream/api/1/tasksB\x90\x07Z=dxnnymurphy.io/cryptodatastream/pkg/model/cryptodatastream/v3\x92\x41\xcd\x06\x12\x90\x01\n\x12\x43rypto Data Stream\"I\n\rDaniel Murphy\x12\x1ehttps://dxnnymurphy.github.io/\x1a\x18\x64\x61nnymurphy_7@icloud.com**\n\x03MIT\x12#https://opensource.org/licenses/MIT2\x03\x30.1*\x02\x02\x01\x32\x10\x61pplication/json:\x10\x61pplication/jsonZ\xf9\x03\n\x0f\n\tBasicAuth\x12\x02\x08\x01\n\xaa\x01\n\nApiKeyAuth\x12\x9b\x01\x08\x02\x1a\tX-API-Key \x02J(\n\x1cx-amazon-apigateway-authtype\x12\x08\x1a\x06oauth2J`\n\x1ex-amazon-apigateway-authorizer\x12>*<\n\x0f\n\x04type\x12\x07\x1a\x05token\n)\n\x1c\x61uthorizerResultTtlInSeconds\x12\t\x11\x00\x00\x00\x00\x00\x00N@\n\xb8\x02\n\x06OAuth2\x12\xad\x02\x08\x03(\x04\x32Thttps://kcde.uat.keplercheuvreux.io/proxy/v1/security/authentication/oauth/authorize:Phttps://kcde.uat.keplercheuvreux.io/proxy/v1/security/authentication/oauth/tokenB\x7f\n\x1a\n\x04read\x12\x12Grants read access\n\x1c\n\x05write\x12\x13Grants write access\nC\n\x05\x61\x64min\x12:Grants read and write access to administrative informationb\x1f\n\r\n\tBasicAuth\x12\x00\n\x0e\n\nApiKeyAuth\x12\x00\x62)\n\x17\n\x06OAuth2\x12\r\n\x04read\n\x05write\n\x0e\n\nApiKeyAuth\x12\x00rH\n\rDocumentation\x12\x37https://github.com/dxnnymurphy/alpaca-crypto-datastreamb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'service_cryptodatastream_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z=dxnnymurphy.io/cryptodatastream/pkg/model/cryptodatastream/v3\222A\315\006\022\220\001\n\022Crypto Data Stream\"I\n\rDaniel Murphy\022\036https://dxnnymurphy.github.io/\032\030dannymurphy_7@icloud.com**\n\003MIT\022#https://opensource.org/licenses/MIT2\0030.1*\002\002\0012\020application/json:\020application/jsonZ\371\003\n\017\n\tBasicAuth\022\002\010\001\n\252\001\n\nApiKeyAuth\022\233\001\010\002\032\tX-API-Key \002J(\n\034x-amazon-apigateway-authtype\022\010\032\006oauth2J`\n\036x-amazon-apigateway-authorizer\022>*<\n\017\n\004type\022\007\032\005token\n)\n\034authorizerResultTtlInSeconds\022\t\021\000\000\000\000\000\000N@\n\270\002\n\006OAuth2\022\255\002\010\003(\0042Thttps://kcde.uat.keplercheuvreux.io/proxy/v1/security/authentication/oauth/authorize:Phttps://kcde.uat.keplercheuvreux.io/proxy/v1/security/authentication/oauth/tokenB\177\n\032\n\004read\022\022Grants read access\n\034\n\005write\022\023Grants write access\nC\n\005admin\022:Grants read and write access to administrative informationb\037\n\r\n\tBasicAuth\022\000\n\016\n\nApiKeyAuth\022\000b)\n\027\n\006OAuth2\022\r\n\004read\n\005write\n\016\n\nApiKeyAuth\022\000rH\n\rDocumentation\0227https://github.com/dxnnymurphy/alpaca-crypto-datastream'
  _SERVICECRYPTODATASTREAM.methods_by_name['CreateTask']._options = None
  _SERVICECRYPTODATASTREAM.methods_by_name['CreateTask']._serialized_options = b'\202\323\344\223\002\'\"\"/proxy/cryptodatastream/api/1/task:\001*'
  _SERVICECRYPTODATASTREAM.methods_by_name['DeleteTask']._options = None
  _SERVICECRYPTODATASTREAM.methods_by_name['DeleteTask']._serialized_options = b'\202\323\344\223\002,**/proxy/cryptodatastream/api/1/task/{value}'
  _SERVICECRYPTODATASTREAM.methods_by_name['ReadTask']._options = None
  _SERVICECRYPTODATASTREAM.methods_by_name['ReadTask']._serialized_options = b'\202\323\344\223\002,\022*/proxy/cryptodatastream/api/1/task/{value}'
  _SERVICECRYPTODATASTREAM.methods_by_name['ListTasks']._options = None
  _SERVICECRYPTODATASTREAM.methods_by_name['ListTasks']._serialized_options = b'\202\323\344\223\002%\022#/proxy/cryptodatastream/api/1/tasks'
  _TASKTYPE._serialized_start=1224
  _TASKTYPE._serialized_end=1309
  _TASKSTATUSTYPE._serialized_start=1312
  _TASKSTATUSTYPE._serialized_end=1545
  _TASKS._serialized_start=136
  _TASKS._serialized_end=350
  _TASKS_METADATA._serialized_start=251
  _TASKS_METADATA._serialized_end=273
  _TASKS_SPEC._serialized_start=275
  _TASKS_SPEC._serialized_end=350
  _TASK._serialized_start=353
  _TASK._serialized_end=945
  _TASK_METADATA._serialized_start=518
  _TASK_METADATA._serialized_end=649
  _TASK_SPEC._serialized_start=652
  _TASK_SPEC._serialized_end=866
  _TASK_STATUS._serialized_start=868
  _TASK_STATUS._serialized_end=945
  _TASKTRADESEARCH._serialized_start=947
  _TASKTRADESEARCH._serialized_end=1052
  _TASKREPLAYTRADESEARCH._serialized_start=1054
  _TASKREPLAYTRADESEARCH._serialized_end=1165
  _VOID._serialized_start=1167
  _VOID._serialized_end=1173
  _INT32._serialized_start=1175
  _INT32._serialized_end=1197
  _STRING._serialized_start=1199
  _STRING._serialized_end=1222
  _SERVICECRYPTODATASTREAM._serialized_start=1548
  _SERVICECRYPTODATASTREAM._serialized_end=2059
# @@protoc_insertion_point(module_scope)
